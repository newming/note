(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{392:function(s,a,t){"use strict";t.r(a);var n=t(40),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"基本概念"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#基本概念"}},[s._v("#")]),s._v(" 基本概念")]),s._v(" "),t("h2",{attrs:{id:"_3-4-数据类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-数据类型"}},[s._v("#")]),s._v(" 3.4 数据类型")]),s._v(" "),t("p",[s._v("5中简单数据类型（基本数据类型）")]),s._v(" "),t("ul",[t("li",[s._v("Undefined：只有一个值: undefined")]),s._v(" "),t("li",[s._v("Null：只有一个值: null")]),s._v(" "),t("li",[s._v("Boolean")]),s._v(" "),t("li",[s._v("Number")]),s._v(" "),t("li",[s._v("String")])]),s._v(" "),t("p",[s._v("1中复杂数据类型")]),s._v(" "),t("ul",[t("li",[s._v("Object")])]),s._v(" "),t("h3",{attrs:{id:"_3-4-1-typeof-操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-1-typeof-操作符"}},[s._v("#")]),s._v(" 3.4.1 typeof 操作符")]),s._v(" "),t("p",[s._v("可能返回的结果:")]),s._v(" "),t("ul",[t("li",[s._v("\bundefined")]),s._v(" "),t("li",[s._v("boolean")]),s._v(" "),t("li",[s._v("string")]),s._v(" "),t("li",[s._v("number")]),s._v(" "),t("li",[s._v("object: null \b或对象，注意对象包括的东西很多，比如日期，数组，正则等")]),s._v(" "),t("li",[s._v("function")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" message\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" message "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("typeof")]),s._v(" age "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对未声明，未初始化的变量执行 typeof 同样返回 undefined")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"_3-4-4-boolean-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-4-boolean-类型"}},[s._v("#")]),s._v(" 3.4.4 Boolean 类型")]),s._v(" "),t("p",[s._v("可以通过调用 Boolean() 方法讲值转换为 Boolean 值")]),s._v(" "),t("p",[s._v("返回 false 的情况:")]),s._v(" "),t("ul",[t("li",[s._v("false")]),s._v(" "),t("li",[s._v("'' // 空字符串")]),s._v(" "),t("li",[s._v("0")]),s._v(" "),t("li",[s._v("NaN")]),s._v(" "),t("li",[s._v("null")]),s._v(" "),t("li",[s._v("undefined")])]),s._v(" "),t("h3",{attrs:{id:"_3-4-5-number-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-5-number-类型"}},[s._v("#")]),s._v(" 3.4.5 Number 类型")]),s._v(" "),t("ol",[t("li",[s._v("浮点数值精度远远不如整数， 0.1 + 0.2 != 0.3")]),s._v(" "),t("li",[s._v("数值范围: Number.MAX_VALUE - Number.MIN_VALUE，超出后为 +/- Infinity")]),s._v(" "),t("li",[s._v("NaN: NaN == NaN // false，可以通过 isNaN 判断是否不是数值")]),s._v(" "),t("li",[s._v("数值转换: Number()可以用于任何数据类型, parseInt()、parseFloat() 用于字符串。而且转换规则也不相同，转换结果不一定相同(P30)")])]),s._v(" "),t("p",[s._v("例如：Number 转换的结果：")]),s._v(" "),t("ul",[t("li",[s._v("Boolean: 0,1")]),s._v(" "),t("li",[s._v("Number: Number, 3 -> 3, 3.400 -> 3.4")]),s._v(" "),t("li",[s._v("null: 0")]),s._v(" "),t("li",[s._v("undefined: NaN")]),s._v(" "),t("li",[s._v("String: number/NaN,'0.3' -> 0.3, '3x' -> NaN")]),s._v(" "),t("li",[s._v("Object: NaN")])]),s._v(" "),t("p",[s._v("parseInt/ParseFloat:只有两种结果：number/NaN，例如: parseInt('123blue') -> 123, parseInt('aaa123blue') -> NaN")]),s._v(" "),t("h3",{attrs:{id:"_3-4-6-字符串类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-6-字符串类型"}},[s._v("#")]),s._v(" 3.4.6 字符串类型")]),s._v(" "),t("p",[s._v("1.字符字面量")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("字面量")]),s._v(" "),t("th",[s._v("含义")])])]),s._v(" "),t("tbody",[t("tr",[t("td",[s._v("\\n")]),s._v(" "),t("td",[s._v("换行")])]),s._v(" "),t("tr",[t("td",[s._v("\\t")]),s._v(" "),t("td",[s._v("制表(tab)")])]),s._v(" "),t("tr",[t("td",[s._v("\\b")]),s._v(" "),t("td",[s._v("退格")])]),s._v(" "),t("tr",[t("td",[s._v("\\r")]),s._v(" "),t("td",[s._v("回车")])]),s._v(" "),t("tr",[t("td",[s._v("\\f")]),s._v(" "),t("td",[s._v("进纸")])]),s._v(" "),t("tr",[t("td",[s._v("\\")]),s._v(" "),t("td",[s._v("斜杠")])]),s._v(" "),t("tr",[t("td",[s._v("'")]),s._v(" "),t("td",[s._v("单引号")])]),s._v(" "),t("tr",[t("td",[s._v('"')]),s._v(" "),t("td",[s._v("双引号")])]),s._v(" "),t("tr",[t("td",[s._v("\\xnn")]),s._v(" "),t("td",[s._v("以十六进制代码 nn \b表示的一个字符，n 为 0-f，例如：'\\x41' -> A")])]),s._v(" "),t("tr",[t("td",[s._v("\\unnnn")]),s._v(" "),t("td",[s._v("以十六进制代码 nnnn \b表示的一个 Unicode 字符，n 为 0-f，例如：'\\\bu03a3' -> \"Σ\"")])])])]),s._v(" "),t("p",[s._v("2.转换为字符串：")]),s._v(" "),t("ol",[t("li",[s._v("toString()")]),s._v(" "),t("li",[s._v("String()")])]),s._v(" "),t("p",[s._v("数值、布尔值、对象和字符串值都有 "),t("code",[s._v("toString()")]),s._v(" 方法，null、undefined 没有该方法。")]),s._v(" "),t("p",[s._v("在调用数字的 "),t("code",[s._v("toString()")]),s._v(" 方法时也可以传递一个参数，将返回该数值其他进制表示的字符串。例如：10.toString() -> '10', 10.toString(2) -> '1010'")]),s._v(" "),t("p",[s._v("在不知道要转换的值是否为 null, undefined，可以使用转型函数 String()，该函数能够将任何数据类型转换为字符串，遵循以下规则。")]),s._v(" "),t("ol",[t("li",[s._v("如果值有 "),t("code",[s._v("toString()")]),s._v(" 方法，则调用该方法并返回结果")]),s._v(" "),t("li",[s._v("null: 'null'")]),s._v(" "),t("li",[s._v("undefined: 'undefined'")])]),s._v(" "),t("h3",{attrs:{id:"_3-4-7-object-类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-7-object-类型"}},[s._v("#")]),s._v(" 3.4.7 Object 类型")]),s._v(" "),t("p",[s._v("Object 的每个实例都具有下列属性和方法：")]),s._v(" "),t("ul",[t("li",[s._v("constructor")]),s._v(" "),t("li",[s._v("hasOwnProperty(propertyName)")]),s._v(" "),t("li",[s._v("isPrototypeOf(object)")]),s._v(" "),t("li",[s._v("propertyIsEnumerable(propertyName)")]),s._v(" "),t("li",[s._v("toLocaleString()")]),s._v(" "),t("li",[s._v("toString()")]),s._v(" "),t("li",[s._v("valueOf(): 返回对象的字符串、数值或布尔值表示。通常与 toString() 方法的返回值相同")])]),s._v(" "),t("h2",{attrs:{id:"_3-5-操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-操作符"}},[s._v("#")]),s._v(" 3.5 操作符")]),s._v(" "),t("h3",{attrs:{id:"_3-5-1-一元操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-1-一元操作符"}},[s._v("#")]),s._v(" 3.5.1 一元操作符")]),s._v(" "),t("ol",[t("li",[s._v("递增和递减操作符")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 前置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("num1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 21")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" num1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 21")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 后置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num2 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num3 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" num1"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 22")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num4 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" num1 "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" num2 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 21")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("一元加和减操作符")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v("\nnum "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("num "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 25")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于非数值应用一元 加 操作符时会调用 Number() 进行数据类型转换")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 对于非数值应用一元 减 操作符时会调用 Number() 进行数据类型转换，然后在将得到的数据转换为负数")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("h3",{attrs:{id:"_3-5-2-位操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-2-位操作符"}},[s._v("#")]),s._v(" 3.5.2 位操作符")]),s._v(" "),t("p",[s._v("这节内容偏底层，没怎么在开发中用过，这里略过")]),s._v(" "),t("h3",{attrs:{id:"_3-5-3-布尔操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-3-布尔操作符"}},[s._v("#")]),s._v(" 3.5.3 布尔操作符")]),s._v(" "),t("ol",[t("li",[s._v("逻辑非")])]),s._v(" "),t("p",[s._v("逻辑非操作符由一个叹号(!)表示，可以应用与 ECMAScript 中的任何值。无论这个值是什么数据类型，这个操作符都会返回一个布尔值。逻辑非操作符首先会将它操作的\b值转为一个布尔值，然后在\b对其求反。")]),s._v(" "),t("p",[s._v("也可以同时使用两个逻辑非操作符，实现 Boolean() 功能")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("逻辑与(&&)")])]),s._v(" "),t("p",[s._v("逻辑与操作符由两个 "),t("code",[s._v("&")]),s._v(" 表示，有两个操作数")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" result "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("逻辑与操作可以应用与任何数据类型的操作数，而不仅仅是布尔值。再有一个操作数不是布尔值的情况下，逻辑与操作就不一定返回布尔值；遵循以下规则：")]),s._v(" "),t("ul",[t("li",[s._v("如果第一个操作数是对象，则返回第二个操作数")]),s._v(" "),t("li",[s._v("如果第二个操作数是对象，则只有在第一个操作数的求职结果为 true 的情况下才会返回该对象")]),s._v(" "),t("li",[s._v("如果两个操作数都是对象，则\b返回第二个操作数")]),s._v(" "),t("li",[s._v("如果\b第一个操作数为 NaN，则返回 NaN")]),s._v(" "),t("li",[s._v("如果有第个操作数是 undefined，则返回 undefined")])]),s._v(" "),t("p",[s._v("逻辑与操作属于短路操作，即如果第一个参数能够决定结果，就不会在往下走了，不会对第二个操作数进行求值。如果第一个操作数是 false,则无论第二个操作数是什么值，结果都不再可能是 true 了。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" aaa "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" aaa "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// null")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" aaa "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// undefined")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" aaa "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" aaa "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// ""')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" aaa "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 报错")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("逻辑或(||)")])]),s._v(" "),t("p",[s._v("通上(&&)，也是短路操作，如果第一个是 true，就返回第一个操作数，不会\b继续往下走")]),s._v(" "),t("h3",{attrs:{id:"_3-5-4-乘性操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-4-乘性操作符"}},[s._v("#")]),s._v(" 3.5.4 乘性操作符")]),s._v(" "),t("ol",[t("li",[s._v("乘法(*)")])]),s._v(" "),t("p",[s._v("如果又一个操作数不是数值，则在后台调用 Number() 将其转换为数值")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("除法(/)")])]),s._v(" "),t("p",[s._v("如果是非零的有限数被除零，则结果是 Infinity 或 -Infinity")]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("求模(%)")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" res "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("%")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 1")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_3-5-5-加性操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-5-加性操作符"}},[s._v("#")]),s._v(" 3.5.5 加性操作符")]),s._v(" "),t("ol",[t("li",[s._v("加法")])]),s._v(" "),t("p",[s._v("如果两个操作符都是数值，执行常规的加法计算")]),s._v(" "),t("p",[s._v("如果有一个操作数是字符串，就会进行字符串拼接")]),s._v(" "),t("p",[s._v("如果有一个操作数是对象则调用他的 toString() 方法取到相应的字符串值，布尔值则转为数字进行求和，对于 null 和 undefined 则调用 String()——此处（67页）有误")]),s._v(" "),t("p",[s._v("使用加法需要谨慎，因为他有字符串拼接的作用")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("let")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'the result is'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsole"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'the result is'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" b"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("减法")])]),s._v(" "),t("p",[s._v("不是数字会尝试转数字")]),s._v(" "),t("h3",{attrs:{id:"_3-5-6-关系操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-6-关系操作符"}},[s._v("#")]),s._v(" 3.5.6 关系操作符")]),s._v(" "),t("p",[s._v("<, >, <=, >= 这几个关系操作符都会返回布尔值")]),s._v(" "),t("ul",[t("li",[s._v("两个操作数都是数值，则执行数值比较")]),s._v(" "),t("li",[s._v("两个操作数都是字符串，则比较两个字符串对应的字符串编码值")]),s._v(" "),t("li",[s._v("如果一个操作数是数值，则将另一个操作数转换为一个数值，然后执行数值比较")]),s._v(" "),t("li",[s._v("如果一个操作数是对象，则调用这个对象的 valueOf() 方法，用得到的结果按照前面的规则执行比较。如果对象没有 valueOf() 方法，则调用 toString() 方法，并用得到的结果根据前面的规则进行比较")]),s._v(" "),t("li",[s._v("如果一个操作数是布尔值，则将其转换为数值，然后执行比较")]),s._v(" "),t("li",[s._v("任何操作数与 NaN 进行关系比较，结果都是 false")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"23"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"23"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// false "a" -> NaN')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// true "" -> 0')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"_3-5-7-相等操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-7-相等操作符"}},[s._v("#")]),s._v(" 3.5.7 相等操作符")]),s._v(" "),t("ol",[t("li",[s._v("相等和不相等 == 和 !=")])]),s._v(" "),t("ul",[t("li",[s._v("如果有一个操作数是布尔值，则在比较之前先将其转化为数值，false为0，true为1")]),s._v(" "),t("li",[s._v("如果一个操作数是字符串，另一个操作数是数值，在比较相等性之前先将字符串转换为数值")]),s._v(" "),t("li",[s._v("如果一个操作数是对象，另一个操作数不是，则调用对象的 valueOf() 方法，用得到的基本类型值按照前面的规则进行比较")]),s._v(" "),t("li",[s._v("null 和 undefined 是相等的")]),s._v(" "),t("li",[s._v("在比较相等性之前，不能将 null 和 undefined 转换成其他任何值")]),s._v(" "),t("li",[s._v("如果有一个操作数是 NaN，则相等操作符返回 false，而不相等操作符返回 true，NaN 不等于 NaN")]),s._v(" "),t("li",[s._v("如果两个操作数都是对象，则比较它们是不是同一个对象。如果两个操作数都指向同一个对象，则相等")])]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("全等和不全等 === 和 !==")])]),s._v(" "),t("p",[s._v("在比较之前不转换操作数，其余同相等和不相等操作符相同。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("===")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("undefined")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// false")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("h3",{attrs:{id:"_3-5-8-条件操作符-三目运算符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-8-条件操作符-三目运算符"}},[s._v("#")]),s._v(" 3.5.8 条件操作符(三目运算符)")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("?")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_3-5-9-赋值操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-9-赋值操作符"}},[s._v("#")]),s._v(" 3.5.9 赋值操作符(=)")]),s._v(" "),t("p",[s._v("简单的赋值操作(=)将右侧的值赋给左侧的变量")]),s._v(" "),t("p",[s._v("复合赋值操作: *=, /=, %=, +=, -=, <<=, >>=, >>>=。设计这些操作符的主要目的就是简化赋值操作，使用它们不会带来任何性能提升。")]),s._v(" "),t("h3",{attrs:{id:"_3-5-10-逗号操作符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-10-逗号操作符"}},[s._v("#")]),s._v(" 3.5.10 逗号操作符")]),s._v(" "),t("p",[s._v("使用逗号操作符可以在一条语句中执行多个操作，如下面的例子所示：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" b "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("blockquote",[t("p",[s._v("逗号操作符多用于声明变量；但除此之外，逗号操作符还可以用于赋值。在用于赋值的时候，逗号操作符总会返回表达式中的最后一项。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// num 的值为 0")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"_3-6-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-语句"}},[s._v("#")]),s._v(" 3.6 语句")]),s._v(" "),t("h3",{attrs:{id:"_3-6-1-if-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-1-if-语句"}},[s._v("#")]),s._v(" 3.6.1 if 语句")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 推荐写法，其他各种省略不要写")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("condition1"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  statement1\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("condition2"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  statement2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  statements\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("h3",{attrs:{id:"_3-6-2-do-while-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-2-do-while-语句"}},[s._v("#")]),s._v(" 3.6.2 do-while 语句")]),s._v(" "),t("p",[s._v("do-while 语句是一种后测试循环语句，即只有循环体中的代码执行之后，才会测试出口条件。换句话说，在对条件表达式求值之前，循环体内的代码至少会被执行一次。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("do")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  statement\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("h3",{attrs:{id:"_3-6-3-while-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-3-while-语句"}},[s._v("#")]),s._v(" 3.6.3 while 语句")]),s._v(" "),t("p",[s._v("while 语句属于前测试循环语句。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" statement\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_3-6-4-for-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-4-for-语句"}},[s._v("#")]),s._v(" 3.6.4 for 语句")]),s._v(" "),t("p",[s._v("for 语句属于前测试循环语句。但它具有在执行之前初始化变量和定义循环后要执行的代码的能力。")]),s._v(" "),t("blockquote",[t("p",[s._v("使用 while 循环做不到的，使用 for 循环也同样做不到。")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("doSomething")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 无限循环")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 同 while")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" count "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" count"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  i "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h3",{attrs:{id:"_3-6-5-for-in-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-5-for-in-语句"}},[s._v("#")]),s._v(" 3.6.5 for-in 语句")]),s._v(" "),t("p",[s._v("for-in 语句是一种精准的迭代语句，可以用来枚举对象的属性。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("property "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" expression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" statement\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h3",{attrs:{id:"_3-6-6-label-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-6-label-语句"}},[s._v("#")]),s._v(" 3.6.6 label 语句")]),s._v(" "),t("p",[s._v("使用 label 语句可以在代码中添加标签，以便将来使用。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[s._v("label"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" statement\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// example")]),s._v("\nstart"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" i"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("++")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("alert")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 这个例子中定义的 start 标签可以在将来由 break 或 continue 语句引用。加标签的语句一般都要与 for 语句等循环语句配合使用。")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("这个没用过，"),t("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Statements/label",target:"_blank",rel:"noopener noreferrer"}},[s._v("mdn 文档"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"_3-6-7-break-和-continue-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-7-break-和-continue-语句"}},[s._v("#")]),s._v(" 3.6.7 break 和 continue 语句")]),s._v(" "),t("p",[s._v("注意 break 和 continue 的区别。前者是立即退出循环，后者是进行下次循环代码。")]),s._v(" "),t("h3",{attrs:{id:"_3-6-8-with-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-8-with-语句"}},[s._v("#")]),s._v(" 3.6.8 with 语句")]),s._v(" "),t("p",[t("code",[s._v("with")]),s._v(" 语句的作用是将代码的作用域设置到一个特定的对象中。")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("expression"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" statement"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("定义 "),t("code",[s._v("with")]),s._v(" 语句的目的只要是为了简化多次编写同一个对象的工作，如下面的例子所示：")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" qs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" location"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("search"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" hostname "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" location"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("hostname\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" location"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("href\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 使用 with 语句简化")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("location"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" qs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" search"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("substring")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" hostname "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" hostname\n  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" url "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" href\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("p",[s._v("这里在 with 语句的代码块中，每个变量首先会被认为是一个局部变量，而如果局部环境中找不到该变量的定义，就会查询 location 对象中是否具有同名属性，如果有则将这个属性值当作变量的值。")]),s._v(" "),t("blockquote",[t("p",[s._v("严格模式下不允许使用 with 语句，否则将视为语法错误。")])]),s._v(" "),t("h3",{attrs:{id:"_3-6-9-switch-语句"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-9-switch-语句"}},[s._v("#")]),s._v(" 3.6.9 switch 语句")]),s._v(" "),t("blockquote",[t("p",[s._v("注意 switch 语句在比较值时使用的是全等操作符，因此不会发生类型转换。")])]),s._v(" "),t("h2",{attrs:{id:"_3-7-函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-函数"}},[s._v("#")]),s._v(" 3.7 函数")]),s._v(" "),t("h3",{attrs:{id:"_3-7-1-理解参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-1-理解参数"}},[s._v("#")]),s._v(" 3.7.1 理解参数")]),s._v(" "),t("h3",{attrs:{id:"_3-7-2-理解参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-7-2-理解参数"}},[s._v("#")]),s._v(" 3.7.2 理解参数")]),s._v(" "),t("h2",{attrs:{id:"_3-8-小节"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-8-小节"}},[s._v("#")]),s._v(" 3.8 小节")])])}),[],!1,null,null,null);a.default=e.exports}}]);