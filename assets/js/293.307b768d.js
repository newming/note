(window.webpackJsonp=window.webpackJsonp||[]).push([[293],{660:function(t,a,v){"use strict";v.r(a);var _=v(40),r=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"组件设计思路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#组件设计思路"}},[t._v("#")]),t._v(" 组件设计思路")]),t._v(" "),v("p",[t._v("假设设计一个输入搜索组件(带自动补全)")]),t._v(" "),v("h2",{attrs:{id:"基本实现原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#基本实现原理"}},[t._v("#")]),t._v(" 基本实现原理")]),t._v(" "),v("p",[t._v("首先我们需要明确一下需求，我们要做的是一个自动补全组件，类似与 Google 的搜索框。主要是根据用户的输入，来联想一些用户可能会搜索的词，然后提示用户来提升用户体验。")]),t._v(" "),v("h2",{attrs:{id:"通用组件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#通用组件"}},[t._v("#")]),t._v(" 通用组件")]),t._v(" "),v("p",[t._v("我们设计组件的原则，首先看的组件的通用性、可移植性和扩展性，组件的粒度要小，其次是要保证安全性。")]),t._v(" "),v("h2",{attrs:{id:"考虑大概设计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#考虑大概设计"}},[t._v("#")]),t._v(" 考虑大概设计")]),t._v(" "),v("ul",[v("li",[t._v("这个组件由简单的一个文本和搜索按钮还有右侧扩展区组成")]),t._v(" "),v("li",[t._v("文本框监听有 focus、blur、change 等事件\n"),v("ul",[v("li",[t._v("focus、blur 由组件自身处理显示隐藏")]),t._v(" "),v("li",[t._v("change 主要处理 props 的题词搜索事件")]),t._v(" "),v("li",[t._v("search 处理 props 的搜索事件")])])]),t._v(" "),v("li",[t._v("右侧的扩展区通过{props.children} react 或者 slot vue 来处理")]),t._v(" "),v("li",[t._v("change 和 search 也可以通过 emit 事件来进行处理")])]),t._v(" "),v("h2",{attrs:{id:"安全性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安全性"}},[t._v("#")]),t._v(" 安全性")]),t._v(" "),v("p",[t._v("基本的处理就是上述的内容，但是作为一个搜索组件，我们更要防止其他人通过这个组件来供给服务器。所以我们要处理用户的每一次输入，进行转义后提交，后端人员也必须做相应的字符处理流程。")]),t._v(" "),v("h2",{attrs:{id:"性能问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#性能问题"}},[t._v("#")]),t._v(" 性能问题")]),t._v(" "),v("p",[t._v("用户如果一直在不停的输入/删除，我们需要不停的进行服务器请求，有没有一个方式可以有效的限制用户的请求数，又不影响用户体验的方法呢?当然有的，那就是利用防抖/节流，这里还是建使用防抖来进行限制。")]),t._v(" "),v("h2",{attrs:{id:"其他方向"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他方向"}},[t._v("#")]),t._v(" 其他方向")]),t._v(" "),v("ul",[v("li",[t._v("在客户端做一些敏感词的提示会比较好")]),t._v(" "),v("li",[t._v("保存用户的一些输入/搜索记录，后端在做联想搜索时会更加方便")]),t._v(" "),v("li",[t._v("增加一些用户体验方面的功能，比如一些展示效果，一键清空内容之类的功能")])]),t._v(" "),v("h2",{attrs:{id:"注意事项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),v("ul",[v("li",[t._v("不要无限制的扩充组件的功能，防止臃肿")]),t._v(" "),v("li",[t._v("要尽可能解耦，用多组件组合的方式，或者使用 HOC 来协助")]),t._v(" "),v("li",[t._v("在必要的情况下，可以定义一些配置项，但也不要过于复杂化")])]),t._v(" "),v("p",[t._v("注重业务需求和用户体验是最重要的，不要为了实现而实现，在保证用户体验的前提下，多思考下对其他组件和其他协作开发者的影响。")])])}),[],!1,null,null,null);a.default=r.exports}}]);