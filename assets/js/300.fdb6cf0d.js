(window.webpackJsonp=window.webpackJsonp||[]).push([[300],{664:function(t,s,a){"use strict";a.r(s);var n=a(40),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#typescript"}},[t._v("#")]),t._v(" TypeScript")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.typescriptlang.org/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ts 文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.typescriptlang.org/play",target:"_blank",rel:"noopener noreferrer"}},[t._v("ts playground"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://martsforever-demo.gitee.io/template-plain-react-micro-base/",target:"_blank",rel:"noopener noreferrer"}},[t._v("ts 各种练习题-admin/888888"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6844903981227966471#heading-112",target:"_blank",rel:"noopener noreferrer"}},[t._v("ts 文章"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://jkchao.github.io/typescript-book-chinese/#why",target:"_blank",rel:"noopener noreferrer"}},[t._v("深入理解 TypeScript 书籍"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"练习目录"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#练习目录"}},[t._v("#")]),t._v(" 练习目录")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://gitee.com/martsforever-study/typescript-practice.git",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考地址"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"http://martsforever-demo.gitee.io/template-plain-react-micro-base/#other/exercise-list",target:"_blank",rel:"noopener noreferrer"}},[t._v("题目地址-admin/888888"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("各种范型类型实现")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/typescript/string.html"}},[t._v("string 各种范型类型实现")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/typescript/tuple.html"}},[t._v("Tuple 各种范型类型实现")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/typescript/object.html"}},[t._v("对象&联合类型")])],1)]),t._v(" "),a("h2",{attrs:{id:"type-和-interface-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-和-interface-区别"}},[t._v("#")]),t._v(" type 和 interface 区别")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903749501059085",target:"_blank",rel:"noopener noreferrer"}},[t._v("参考文章"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("相同点")]),t._v(" "),a("ul",[a("li",[t._v("接口定义的两种不同形式，都可以描述一个对象或者函数")]),t._v(" "),a("li",[t._v("都支持继承，而且可以互相继承，但是语法有差异")])]),t._v(" "),a("p",[t._v("不同点")]),t._v(" "),a("ul",[a("li",[t._v("type 可以声明基本类型别名，联合类型，元组等类型")])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 基本类型别名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Name")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 联合类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Dog")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("wong")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Cat")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("miao")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Pet")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Dog "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Cat"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 具体定义数组每个位置的类型")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PetList")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Dog"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Pet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br")])]),a("ul",[a("li",[t._v("type 语句中可以使用 typeof 获取实例的类型进行赋值")])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 当你想获取一个变量的类型时，使用 typeof")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" div "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"div"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" div"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("ul",[a("li",[t._v("type 可以申明联合类型，如 type unionType = myType1 | myType2")]),t._v(" "),a("li",[t._v("type 可以申明元组类型，如 type yuanzu = [myType1, myType2]")]),t._v(" "),a("li",[t._v("interface 可以声明合并，type 的话会报重复定义")])]),t._v(" "),a("div",{staticClass:"language-ts line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ts"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n  test实际为 {\n    name: string\n    age: number\n  }\n*/")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])]),a("h2",{attrs:{id:"ts-里面有哪些-javascript-没有的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ts-里面有哪些-javascript-没有的类型"}},[t._v("#")]),t._v(" TS 里面有哪些 JavaScript 没有的类型")]),t._v(" "),a("ul",[a("li",[t._v("any: 可以赋予任意类型的值")]),t._v(" "),a("li",[t._v("tuple: 元组类型用来表示已知元素数量和类型的数组，各元素的类型不必相同，对应位置的类型需要一样 let x: [string, number];")]),t._v(" "),a("li",[t._v("enum: 枚举类型用于定义值集合")]),t._v(" "),a("li",[t._v("void:标识方法返回值的类型，表示方法没有返回值")]),t._v(" "),a("li",[t._v("never: 是其它类型(包括 null 和 undefined)的子类型，是不会发生的类型。例如，never 总是抛出异常或永不返回的异常的函数表达式的返回类型")]),t._v(" "),a("li",[t._v("unknown: 未知类型，一般在使用后再手动转具体的类型")]),t._v(" "),a("li",[t._v("union: 联合类型，多种类型之一 string | number; // string 或 number")]),t._v(" "),a("li",[t._v("intersection: 交叉类型，多种类型合并 { a: string; } & { b: number; } // => { a: string; b: number }")]),t._v(" "),a("li",[t._v("Generics: 泛型")])])])}),[],!1,null,null,null);s.default=e.exports}}]);